/* tslint:disable */
/* eslint-disable */
/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusRelease,
    ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusReleaseFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusReleaseFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusReleaseToJSON,
} from './';

/**
 * 
 * @export
 * @interface ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatus
 */
export interface ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatus {
    /**
     * AppVersion is the value of the AppVersion field in the Chart.yaml of the deployed chart. This is an optional field with the version of the component being deployed. e.g. 0.21.0. https://helm.sh/docs/topics/charts/#the-chartyaml-file
     * @type {string}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatus
     */
    appVersion: string;
    /**
     * Reason is the description of the last status of helm release when the chart is not installed successfully, e.g. deploy resource already exists.
     * @type {string}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatus
     */
    reason?: string;
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusRelease}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatus
     */
    release: ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusRelease;
    /**
     * Version is the value of the Version field in the Chart.yaml of the deployed chart. e.g. 1.0.0.
     * @type {string}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatus
     */
    version: string;
}

export function ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusFromJSON(json: any): ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatus {
    return ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusFromJSONTyped(json, false);
}

export function ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'appVersion': json['appVersion'],
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
        'release': ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusReleaseFromJSON(json['release']),
        'version': json['version'],
    };
}

export function ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusToJSON(value?: ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'appVersion': value.appVersion,
        'reason': value.reason,
        'release': ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusReleaseToJSON(value.release),
        'version': value.version,
    };
}


