/* tslint:disable */
/* eslint-disable */
/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionStatusVerification
 */
export interface ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionStatusVerification {
    /**
     * The algorithm used for hashing. Must be sha512 for now.
     * @type {string}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionStatusVerification
     */
    algorithm: string;
    /**
     * The content of the full rendered ignition hashed by the corresponding algorithm.
     * @type {string}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionStatusVerification
     */
    hash: string;
}

export function ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionStatusVerificationFromJSON(json: any): ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionStatusVerification {
    return ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionStatusVerificationFromJSONTyped(json, false);
}

export function ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionStatusVerificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionStatusVerification {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'algorithm': json['algorithm'],
        'hash': json['hash'],
    };
}

export function ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionStatusVerificationToJSON(value?: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionStatusVerification | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'algorithm': value.algorithm,
        'hash': value.hash,
    };
}


