/* tslint:disable */
/* eslint-disable */
/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComGithubGiantswarmApiextensionsPkgApisExampleV1alpha1MemcachedConfigSpec
 */
export interface ComGithubGiantswarmApiextensionsPkgApisExampleV1alpha1MemcachedConfigSpec {
    /**
     * e.g. 3 Memory is how much RAM to use for item storage. e.g. 4G
     * @type {string}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisExampleV1alpha1MemcachedConfigSpec
     */
    memory: string;
    /**
     * Replicas is the number of instances of Memcache.
     * @type {number}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisExampleV1alpha1MemcachedConfigSpec
     */
    replicas: number;
}

export function ComGithubGiantswarmApiextensionsPkgApisExampleV1alpha1MemcachedConfigSpecFromJSON(json: any): ComGithubGiantswarmApiextensionsPkgApisExampleV1alpha1MemcachedConfigSpec {
    return ComGithubGiantswarmApiextensionsPkgApisExampleV1alpha1MemcachedConfigSpecFromJSONTyped(json, false);
}

export function ComGithubGiantswarmApiextensionsPkgApisExampleV1alpha1MemcachedConfigSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComGithubGiantswarmApiextensionsPkgApisExampleV1alpha1MemcachedConfigSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'memory': json['memory'],
        'replicas': json['replicas'],
    };
}

export function ComGithubGiantswarmApiextensionsPkgApisExampleV1alpha1MemcachedConfigSpecToJSON(value?: ComGithubGiantswarmApiextensionsPkgApisExampleV1alpha1MemcachedConfigSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'memory': value.memory,
        'replicas': value.replicas,
    };
}


