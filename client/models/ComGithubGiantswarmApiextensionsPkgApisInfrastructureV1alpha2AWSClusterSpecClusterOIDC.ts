/* tslint:disable */
/* eslint-disable */
/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDCClaims,
    ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDCClaimsFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDCClaimsFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDCClaimsToJSON,
} from './';

/**
 * AWSClusterSpecClusterOIDC holds configuration for OpenID Connect (OIDC) authentication.
 * @export
 * @interface ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDC
 */
export interface ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDC {
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDCClaims}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDC
     */
    claims?: ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDCClaims;
    /**
     * 
     * @type {string}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDC
     */
    clientID?: string;
    /**
     * 
     * @type {string}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDC
     */
    issuerURL?: string;
}

export function ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDCFromJSON(json: any): ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDC {
    return ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDCFromJSONTyped(json, false);
}

export function ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDCFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDC {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'claims': !exists(json, 'claims') ? undefined : ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDCClaimsFromJSON(json['claims']),
        'clientID': !exists(json, 'clientID') ? undefined : json['clientID'],
        'issuerURL': !exists(json, 'issuerURL') ? undefined : json['issuerURL'],
    };
}

export function ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDCToJSON(value?: ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDC | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'claims': ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSClusterSpecClusterOIDCClaimsToJSON(value.claims),
        'clientID': value.clientID,
        'issuerURL': value.issuerURL,
    };
}


