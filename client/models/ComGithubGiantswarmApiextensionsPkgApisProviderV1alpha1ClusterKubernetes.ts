/* tslint:disable */
/* eslint-disable */
/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesAPI,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesAPIFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesAPIFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesAPIToJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesDNS,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesDNSFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesDNSFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesDNSToJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesIngressController,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesIngressControllerFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesIngressControllerFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesIngressControllerToJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesKubelet,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesKubeletFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesKubeletFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesKubeletToJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesNetworkSetup,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesNetworkSetupFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesNetworkSetupFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesNetworkSetupToJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesSSH,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesSSHFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesSSHFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesSSHToJSON,
} from './';

/**
 * 
 * @export
 * @interface ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes
 */
export interface ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes {
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesAPI}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes
     */
    api: ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesAPI;
    /**
     * 
     * @type {string}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes
     */
    cloudProvider: string;
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesDNS}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes
     */
    dns: ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesDNS;
    /**
     * 
     * @type {string}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes
     */
    domain: string;
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesIngressController}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes
     */
    ingressController: ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesIngressController;
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesKubelet}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes
     */
    kubelet: ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesKubelet;
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesNetworkSetup}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes
     */
    networkSetup: ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesNetworkSetup;
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesSSH}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes
     */
    ssh: ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesSSH;
}

export function ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesFromJSON(json: any): ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes {
    return ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesFromJSONTyped(json, false);
}

export function ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'api': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesAPIFromJSON(json['api']),
        'cloudProvider': json['cloudProvider'],
        'dns': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesDNSFromJSON(json['dns']),
        'domain': json['domain'],
        'ingressController': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesIngressControllerFromJSON(json['ingressController']),
        'kubelet': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesKubeletFromJSON(json['kubelet']),
        'networkSetup': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesNetworkSetupFromJSON(json['networkSetup']),
        'ssh': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesSSHFromJSON(json['ssh']),
    };
}

export function ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesToJSON(value?: ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'api': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesAPIToJSON(value.api),
        'cloudProvider': value.cloudProvider,
        'dns': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesDNSToJSON(value.dns),
        'domain': value.domain,
        'ingressController': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesIngressControllerToJSON(value.ingressController),
        'kubelet': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesKubeletToJSON(value.kubelet),
        'networkSetup': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesNetworkSetupToJSON(value.networkSetup),
        'ssh': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesSSHToJSON(value.ssh),
    };
}


