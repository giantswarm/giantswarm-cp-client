/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ComGithubGiantswarmApiextensionsPkgApisBackupV1alpha1ETCDBackup, ComGithubGiantswarmApiextensionsPkgApisBackupV1alpha1ETCDBackupList, IoK8sApimachineryPkgApisMetaV1APIResourceList, IoK8sApimachineryPkgApisMetaV1DeleteOptions, IoK8sApimachineryPkgApisMetaV1Status, IoK8sApimachineryPkgApisMetaV1WatchEvent } from '../models';
export interface CreateBackupGiantswarmIoV1alpha1ETCDBackupRequest {
    body: ComGithubGiantswarmApiextensionsPkgApisBackupV1alpha1ETCDBackup;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface DeleteBackupGiantswarmIoV1alpha1CollectionETCDBackupRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteBackupGiantswarmIoV1alpha1ETCDBackupRequest {
    name: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface ListBackupGiantswarmIoV1alpha1ETCDBackupRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface PatchBackupGiantswarmIoV1alpha1ETCDBackupRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}
export interface ReadBackupGiantswarmIoV1alpha1ETCDBackupRequest {
    name: string;
    pretty?: string;
}
export interface ReplaceBackupGiantswarmIoV1alpha1ETCDBackupRequest {
    name: string;
    body: ComGithubGiantswarmApiextensionsPkgApisBackupV1alpha1ETCDBackup;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface WatchBackupGiantswarmIoV1alpha1ETCDBackupRequest {
    name: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchBackupGiantswarmIoV1alpha1ETCDBackupListRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
/**
 *
 */
export declare class BackupGiantswarmIoV1alpha1Api extends runtime.BaseAPI {
    /**
     * create an ETCDBackup
     */
    createBackupGiantswarmIoV1alpha1ETCDBackupRaw(requestParameters: CreateBackupGiantswarmIoV1alpha1ETCDBackupRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisBackupV1alpha1ETCDBackup>>;
    /**
     * create an ETCDBackup
     */
    createBackupGiantswarmIoV1alpha1ETCDBackup(requestParameters: CreateBackupGiantswarmIoV1alpha1ETCDBackupRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisBackupV1alpha1ETCDBackup>;
    /**
     * delete collection of ETCDBackup
     */
    deleteBackupGiantswarmIoV1alpha1CollectionETCDBackupRaw(requestParameters: DeleteBackupGiantswarmIoV1alpha1CollectionETCDBackupRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete collection of ETCDBackup
     */
    deleteBackupGiantswarmIoV1alpha1CollectionETCDBackup(requestParameters: DeleteBackupGiantswarmIoV1alpha1CollectionETCDBackupRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete an ETCDBackup
     */
    deleteBackupGiantswarmIoV1alpha1ETCDBackupRaw(requestParameters: DeleteBackupGiantswarmIoV1alpha1ETCDBackupRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete an ETCDBackup
     */
    deleteBackupGiantswarmIoV1alpha1ETCDBackup(requestParameters: DeleteBackupGiantswarmIoV1alpha1ETCDBackupRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * get available resources
     */
    getBackupGiantswarmIoV1alpha1APIResourcesRaw(): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1APIResourceList>>;
    /**
     * get available resources
     */
    getBackupGiantswarmIoV1alpha1APIResources(): Promise<IoK8sApimachineryPkgApisMetaV1APIResourceList>;
    /**
     * list or watch objects of kind ETCDBackup
     */
    listBackupGiantswarmIoV1alpha1ETCDBackupRaw(requestParameters: ListBackupGiantswarmIoV1alpha1ETCDBackupRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisBackupV1alpha1ETCDBackupList>>;
    /**
     * list or watch objects of kind ETCDBackup
     */
    listBackupGiantswarmIoV1alpha1ETCDBackup(requestParameters: ListBackupGiantswarmIoV1alpha1ETCDBackupRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisBackupV1alpha1ETCDBackupList>;
    /**
     * partially update the specified ETCDBackup
     */
    patchBackupGiantswarmIoV1alpha1ETCDBackupRaw(requestParameters: PatchBackupGiantswarmIoV1alpha1ETCDBackupRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisBackupV1alpha1ETCDBackup>>;
    /**
     * partially update the specified ETCDBackup
     */
    patchBackupGiantswarmIoV1alpha1ETCDBackup(requestParameters: PatchBackupGiantswarmIoV1alpha1ETCDBackupRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisBackupV1alpha1ETCDBackup>;
    /**
     * read the specified ETCDBackup
     */
    readBackupGiantswarmIoV1alpha1ETCDBackupRaw(requestParameters: ReadBackupGiantswarmIoV1alpha1ETCDBackupRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisBackupV1alpha1ETCDBackup>>;
    /**
     * read the specified ETCDBackup
     */
    readBackupGiantswarmIoV1alpha1ETCDBackup(requestParameters: ReadBackupGiantswarmIoV1alpha1ETCDBackupRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisBackupV1alpha1ETCDBackup>;
    /**
     * replace the specified ETCDBackup
     */
    replaceBackupGiantswarmIoV1alpha1ETCDBackupRaw(requestParameters: ReplaceBackupGiantswarmIoV1alpha1ETCDBackupRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisBackupV1alpha1ETCDBackup>>;
    /**
     * replace the specified ETCDBackup
     */
    replaceBackupGiantswarmIoV1alpha1ETCDBackup(requestParameters: ReplaceBackupGiantswarmIoV1alpha1ETCDBackupRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisBackupV1alpha1ETCDBackup>;
    /**
     * watch changes to an object of kind ETCDBackup. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchBackupGiantswarmIoV1alpha1ETCDBackupRaw(requestParameters: WatchBackupGiantswarmIoV1alpha1ETCDBackupRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch changes to an object of kind ETCDBackup. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchBackupGiantswarmIoV1alpha1ETCDBackup(requestParameters: WatchBackupGiantswarmIoV1alpha1ETCDBackupRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of ETCDBackup. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchBackupGiantswarmIoV1alpha1ETCDBackupListRaw(requestParameters: WatchBackupGiantswarmIoV1alpha1ETCDBackupListRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of ETCDBackup. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchBackupGiantswarmIoV1alpha1ETCDBackupList(requestParameters: WatchBackupGiantswarmIoV1alpha1ETCDBackupListRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
}
//# sourceMappingURL=BackupGiantswarmIoV1alpha1Api.d.ts.map