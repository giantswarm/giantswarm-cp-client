/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfig, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfigList, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfig, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfigList, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfig, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfigList, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfig, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfigList, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfig, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfigList, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfig, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfigList, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1Ignition, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionList, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfig, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfigList, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfig, ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfigList, IoK8sApimachineryPkgApisMetaV1APIResourceList, IoK8sApimachineryPkgApisMetaV1DeleteOptions, IoK8sApimachineryPkgApisMetaV1Status, IoK8sApimachineryPkgApisMetaV1WatchEvent } from '../models';
export interface CreateCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest {
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface CreateCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest {
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface CreateCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest {
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface CreateCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest {
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface CreateCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest {
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface CreateCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest {
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface CreateCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest {
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1Ignition;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface CreateCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest {
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface CreateCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest {
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedAWSClusterConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedAzureClusterConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedCertConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedChartConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedDrainerConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedFlannelConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedIgnitionRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedKVMClusterConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedStorageConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface ListCoreGiantswarmIoV1alpha1AWSClusterConfigForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1AzureClusterConfigForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1CertConfigForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1ChartConfigForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1DrainerConfigForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1FlannelConfigForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1IgnitionForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1KVMClusterConfigForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest {
    namespace: string;
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface ListCoreGiantswarmIoV1alpha1StorageConfigForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface PatchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}
export interface PatchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}
export interface PatchCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}
export interface PatchCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}
export interface PatchCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}
export interface PatchCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}
export interface PatchCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}
export interface PatchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}
export interface PatchCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest {
    name: string;
    namespace: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}
export interface ReadCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface ReadCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface ReadCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface ReadCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface ReadCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface ReadCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface ReadCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface ReadCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface ReadCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest {
    name: string;
    namespace: string;
    pretty?: string;
}
export interface ReplaceCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest {
    name: string;
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface ReplaceCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest {
    name: string;
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface ReplaceCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest {
    name: string;
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface ReplaceCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest {
    name: string;
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface ReplaceCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest {
    name: string;
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface ReplaceCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest {
    name: string;
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface ReplaceCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest {
    name: string;
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1Ignition;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface ReplaceCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest {
    name: string;
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface ReplaceCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest {
    name: string;
    namespace: string;
    body: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfig;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface WatchCoreGiantswarmIoV1alpha1AWSClusterConfigListForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1AzureClusterConfigListForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1CertConfigListForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1ChartConfigListForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1DrainerConfigListForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1FlannelConfigListForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1IgnitionListForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1KVMClusterConfigListForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest {
    name: string;
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigListRequest {
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest {
    name: string;
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigListRequest {
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest {
    name: string;
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedCertConfigListRequest {
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest {
    name: string;
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedChartConfigListRequest {
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest {
    name: string;
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedDrainerConfigListRequest {
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest {
    name: string;
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedFlannelConfigListRequest {
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest {
    name: string;
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedIgnitionListRequest {
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest {
    name: string;
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigListRequest {
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest {
    name: string;
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1NamespacedStorageConfigListRequest {
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchCoreGiantswarmIoV1alpha1StorageConfigListForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
/**
 *
 */
export declare class CoreGiantswarmIoV1alpha1Api extends runtime.BaseAPI {
    /**
     * create an AWSClusterConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRaw(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfig>>;
    /**
     * create an AWSClusterConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfig(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfig>;
    /**
     * create an AzureClusterConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRaw(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfig>>;
    /**
     * create an AzureClusterConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfig(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfig>;
    /**
     * create a CertConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedCertConfigRaw(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfig>>;
    /**
     * create a CertConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedCertConfig(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfig>;
    /**
     * create a ChartConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedChartConfigRaw(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfig>>;
    /**
     * create a ChartConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedChartConfig(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfig>;
    /**
     * create a DrainerConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRaw(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfig>>;
    /**
     * create a DrainerConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedDrainerConfig(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfig>;
    /**
     * create a FlannelConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRaw(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfig>>;
    /**
     * create a FlannelConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedFlannelConfig(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfig>;
    /**
     * create an Ignition
     */
    createCoreGiantswarmIoV1alpha1NamespacedIgnitionRaw(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1Ignition>>;
    /**
     * create an Ignition
     */
    createCoreGiantswarmIoV1alpha1NamespacedIgnition(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1Ignition>;
    /**
     * create a KVMClusterConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRaw(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfig>>;
    /**
     * create a KVMClusterConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfig(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfig>;
    /**
     * create a StorageConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedStorageConfigRaw(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfig>>;
    /**
     * create a StorageConfig
     */
    createCoreGiantswarmIoV1alpha1NamespacedStorageConfig(requestParameters: CreateCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfig>;
    /**
     * delete collection of AWSClusterConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedAWSClusterConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedAWSClusterConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete collection of AWSClusterConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedAWSClusterConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedAWSClusterConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete collection of AzureClusterConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedAzureClusterConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedAzureClusterConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete collection of AzureClusterConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedAzureClusterConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedAzureClusterConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete collection of CertConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedCertConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedCertConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete collection of CertConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedCertConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedCertConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete collection of ChartConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedChartConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedChartConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete collection of ChartConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedChartConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedChartConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete collection of DrainerConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedDrainerConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedDrainerConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete collection of DrainerConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedDrainerConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedDrainerConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete collection of FlannelConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedFlannelConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedFlannelConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete collection of FlannelConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedFlannelConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedFlannelConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete collection of Ignition
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedIgnitionRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedIgnitionRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete collection of Ignition
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedIgnition(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedIgnitionRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete collection of KVMClusterConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedKVMClusterConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedKVMClusterConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete collection of KVMClusterConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedKVMClusterConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedKVMClusterConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete collection of StorageConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedStorageConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedStorageConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete collection of StorageConfig
     */
    deleteCoreGiantswarmIoV1alpha1CollectionNamespacedStorageConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1CollectionNamespacedStorageConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete an AWSClusterConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete an AWSClusterConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete an AzureClusterConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete an AzureClusterConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete a CertConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedCertConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete a CertConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedCertConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete a ChartConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedChartConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete a ChartConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedChartConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete a DrainerConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete a DrainerConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedDrainerConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete a FlannelConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete a FlannelConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedFlannelConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete an Ignition
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedIgnitionRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete an Ignition
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedIgnition(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete a KVMClusterConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete a KVMClusterConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete a StorageConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedStorageConfigRaw(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete a StorageConfig
     */
    deleteCoreGiantswarmIoV1alpha1NamespacedStorageConfig(requestParameters: DeleteCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * get available resources
     */
    getCoreGiantswarmIoV1alpha1APIResourcesRaw(): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1APIResourceList>>;
    /**
     * get available resources
     */
    getCoreGiantswarmIoV1alpha1APIResources(): Promise<IoK8sApimachineryPkgApisMetaV1APIResourceList>;
    /**
     * list or watch objects of kind AWSClusterConfig
     */
    listCoreGiantswarmIoV1alpha1AWSClusterConfigForAllNamespacesRaw(requestParameters: ListCoreGiantswarmIoV1alpha1AWSClusterConfigForAllNamespacesRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfigList>>;
    /**
     * list or watch objects of kind AWSClusterConfig
     */
    listCoreGiantswarmIoV1alpha1AWSClusterConfigForAllNamespaces(requestParameters: ListCoreGiantswarmIoV1alpha1AWSClusterConfigForAllNamespacesRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfigList>;
    /**
     * list or watch objects of kind AzureClusterConfig
     */
    listCoreGiantswarmIoV1alpha1AzureClusterConfigForAllNamespacesRaw(requestParameters: ListCoreGiantswarmIoV1alpha1AzureClusterConfigForAllNamespacesRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfigList>>;
    /**
     * list or watch objects of kind AzureClusterConfig
     */
    listCoreGiantswarmIoV1alpha1AzureClusterConfigForAllNamespaces(requestParameters: ListCoreGiantswarmIoV1alpha1AzureClusterConfigForAllNamespacesRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfigList>;
    /**
     * list or watch objects of kind CertConfig
     */
    listCoreGiantswarmIoV1alpha1CertConfigForAllNamespacesRaw(requestParameters: ListCoreGiantswarmIoV1alpha1CertConfigForAllNamespacesRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfigList>>;
    /**
     * list or watch objects of kind CertConfig
     */
    listCoreGiantswarmIoV1alpha1CertConfigForAllNamespaces(requestParameters: ListCoreGiantswarmIoV1alpha1CertConfigForAllNamespacesRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfigList>;
    /**
     * list or watch objects of kind ChartConfig
     */
    listCoreGiantswarmIoV1alpha1ChartConfigForAllNamespacesRaw(requestParameters: ListCoreGiantswarmIoV1alpha1ChartConfigForAllNamespacesRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfigList>>;
    /**
     * list or watch objects of kind ChartConfig
     */
    listCoreGiantswarmIoV1alpha1ChartConfigForAllNamespaces(requestParameters: ListCoreGiantswarmIoV1alpha1ChartConfigForAllNamespacesRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfigList>;
    /**
     * list or watch objects of kind DrainerConfig
     */
    listCoreGiantswarmIoV1alpha1DrainerConfigForAllNamespacesRaw(requestParameters: ListCoreGiantswarmIoV1alpha1DrainerConfigForAllNamespacesRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfigList>>;
    /**
     * list or watch objects of kind DrainerConfig
     */
    listCoreGiantswarmIoV1alpha1DrainerConfigForAllNamespaces(requestParameters: ListCoreGiantswarmIoV1alpha1DrainerConfigForAllNamespacesRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfigList>;
    /**
     * list or watch objects of kind FlannelConfig
     */
    listCoreGiantswarmIoV1alpha1FlannelConfigForAllNamespacesRaw(requestParameters: ListCoreGiantswarmIoV1alpha1FlannelConfigForAllNamespacesRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfigList>>;
    /**
     * list or watch objects of kind FlannelConfig
     */
    listCoreGiantswarmIoV1alpha1FlannelConfigForAllNamespaces(requestParameters: ListCoreGiantswarmIoV1alpha1FlannelConfigForAllNamespacesRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfigList>;
    /**
     * list or watch objects of kind Ignition
     */
    listCoreGiantswarmIoV1alpha1IgnitionForAllNamespacesRaw(requestParameters: ListCoreGiantswarmIoV1alpha1IgnitionForAllNamespacesRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionList>>;
    /**
     * list or watch objects of kind Ignition
     */
    listCoreGiantswarmIoV1alpha1IgnitionForAllNamespaces(requestParameters: ListCoreGiantswarmIoV1alpha1IgnitionForAllNamespacesRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionList>;
    /**
     * list or watch objects of kind KVMClusterConfig
     */
    listCoreGiantswarmIoV1alpha1KVMClusterConfigForAllNamespacesRaw(requestParameters: ListCoreGiantswarmIoV1alpha1KVMClusterConfigForAllNamespacesRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfigList>>;
    /**
     * list or watch objects of kind KVMClusterConfig
     */
    listCoreGiantswarmIoV1alpha1KVMClusterConfigForAllNamespaces(requestParameters: ListCoreGiantswarmIoV1alpha1KVMClusterConfigForAllNamespacesRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfigList>;
    /**
     * list or watch objects of kind AWSClusterConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRaw(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfigList>>;
    /**
     * list or watch objects of kind AWSClusterConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfig(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfigList>;
    /**
     * list or watch objects of kind AzureClusterConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRaw(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfigList>>;
    /**
     * list or watch objects of kind AzureClusterConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfig(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfigList>;
    /**
     * list or watch objects of kind CertConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedCertConfigRaw(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfigList>>;
    /**
     * list or watch objects of kind CertConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedCertConfig(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfigList>;
    /**
     * list or watch objects of kind ChartConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedChartConfigRaw(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfigList>>;
    /**
     * list or watch objects of kind ChartConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedChartConfig(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfigList>;
    /**
     * list or watch objects of kind DrainerConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRaw(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfigList>>;
    /**
     * list or watch objects of kind DrainerConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedDrainerConfig(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfigList>;
    /**
     * list or watch objects of kind FlannelConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRaw(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfigList>>;
    /**
     * list or watch objects of kind FlannelConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedFlannelConfig(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfigList>;
    /**
     * list or watch objects of kind Ignition
     */
    listCoreGiantswarmIoV1alpha1NamespacedIgnitionRaw(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionList>>;
    /**
     * list or watch objects of kind Ignition
     */
    listCoreGiantswarmIoV1alpha1NamespacedIgnition(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionList>;
    /**
     * list or watch objects of kind KVMClusterConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRaw(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfigList>>;
    /**
     * list or watch objects of kind KVMClusterConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfig(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfigList>;
    /**
     * list or watch objects of kind StorageConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedStorageConfigRaw(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfigList>>;
    /**
     * list or watch objects of kind StorageConfig
     */
    listCoreGiantswarmIoV1alpha1NamespacedStorageConfig(requestParameters: ListCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfigList>;
    /**
     * list or watch objects of kind StorageConfig
     */
    listCoreGiantswarmIoV1alpha1StorageConfigForAllNamespacesRaw(requestParameters: ListCoreGiantswarmIoV1alpha1StorageConfigForAllNamespacesRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfigList>>;
    /**
     * list or watch objects of kind StorageConfig
     */
    listCoreGiantswarmIoV1alpha1StorageConfigForAllNamespaces(requestParameters: ListCoreGiantswarmIoV1alpha1StorageConfigForAllNamespacesRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfigList>;
    /**
     * partially update the specified AWSClusterConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRaw(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfig>>;
    /**
     * partially update the specified AWSClusterConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfig(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfig>;
    /**
     * partially update the specified AzureClusterConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRaw(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfig>>;
    /**
     * partially update the specified AzureClusterConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfig(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfig>;
    /**
     * partially update the specified CertConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedCertConfigRaw(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfig>>;
    /**
     * partially update the specified CertConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedCertConfig(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfig>;
    /**
     * partially update the specified ChartConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedChartConfigRaw(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfig>>;
    /**
     * partially update the specified ChartConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedChartConfig(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfig>;
    /**
     * partially update the specified DrainerConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRaw(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfig>>;
    /**
     * partially update the specified DrainerConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedDrainerConfig(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfig>;
    /**
     * partially update the specified FlannelConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRaw(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfig>>;
    /**
     * partially update the specified FlannelConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedFlannelConfig(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfig>;
    /**
     * partially update the specified Ignition
     */
    patchCoreGiantswarmIoV1alpha1NamespacedIgnitionRaw(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1Ignition>>;
    /**
     * partially update the specified Ignition
     */
    patchCoreGiantswarmIoV1alpha1NamespacedIgnition(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1Ignition>;
    /**
     * partially update the specified KVMClusterConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRaw(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfig>>;
    /**
     * partially update the specified KVMClusterConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfig(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfig>;
    /**
     * partially update the specified StorageConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedStorageConfigRaw(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfig>>;
    /**
     * partially update the specified StorageConfig
     */
    patchCoreGiantswarmIoV1alpha1NamespacedStorageConfig(requestParameters: PatchCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfig>;
    /**
     * read the specified AWSClusterConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRaw(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfig>>;
    /**
     * read the specified AWSClusterConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfig(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfig>;
    /**
     * read the specified AzureClusterConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRaw(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfig>>;
    /**
     * read the specified AzureClusterConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfig(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfig>;
    /**
     * read the specified CertConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedCertConfigRaw(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfig>>;
    /**
     * read the specified CertConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedCertConfig(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfig>;
    /**
     * read the specified ChartConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedChartConfigRaw(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfig>>;
    /**
     * read the specified ChartConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedChartConfig(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfig>;
    /**
     * read the specified DrainerConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRaw(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfig>>;
    /**
     * read the specified DrainerConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedDrainerConfig(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfig>;
    /**
     * read the specified FlannelConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRaw(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfig>>;
    /**
     * read the specified FlannelConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedFlannelConfig(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfig>;
    /**
     * read the specified Ignition
     */
    readCoreGiantswarmIoV1alpha1NamespacedIgnitionRaw(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1Ignition>>;
    /**
     * read the specified Ignition
     */
    readCoreGiantswarmIoV1alpha1NamespacedIgnition(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1Ignition>;
    /**
     * read the specified KVMClusterConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRaw(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfig>>;
    /**
     * read the specified KVMClusterConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfig(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfig>;
    /**
     * read the specified StorageConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedStorageConfigRaw(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfig>>;
    /**
     * read the specified StorageConfig
     */
    readCoreGiantswarmIoV1alpha1NamespacedStorageConfig(requestParameters: ReadCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfig>;
    /**
     * replace the specified AWSClusterConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRaw(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfig>>;
    /**
     * replace the specified AWSClusterConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfig(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AWSClusterConfig>;
    /**
     * replace the specified AzureClusterConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRaw(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfig>>;
    /**
     * replace the specified AzureClusterConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfig(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1AzureClusterConfig>;
    /**
     * replace the specified CertConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedCertConfigRaw(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfig>>;
    /**
     * replace the specified CertConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedCertConfig(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1CertConfig>;
    /**
     * replace the specified ChartConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedChartConfigRaw(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfig>>;
    /**
     * replace the specified ChartConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedChartConfig(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1ChartConfig>;
    /**
     * replace the specified DrainerConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRaw(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfig>>;
    /**
     * replace the specified DrainerConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedDrainerConfig(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1DrainerConfig>;
    /**
     * replace the specified FlannelConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRaw(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfig>>;
    /**
     * replace the specified FlannelConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedFlannelConfig(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1FlannelConfig>;
    /**
     * replace the specified Ignition
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedIgnitionRaw(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1Ignition>>;
    /**
     * replace the specified Ignition
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedIgnition(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1Ignition>;
    /**
     * replace the specified KVMClusterConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRaw(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfig>>;
    /**
     * replace the specified KVMClusterConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfig(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1KVMClusterConfig>;
    /**
     * replace the specified StorageConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedStorageConfigRaw(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfig>>;
    /**
     * replace the specified StorageConfig
     */
    replaceCoreGiantswarmIoV1alpha1NamespacedStorageConfig(requestParameters: ReplaceCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1StorageConfig>;
    /**
     * watch individual changes to a list of AWSClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1AWSClusterConfigListForAllNamespacesRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1AWSClusterConfigListForAllNamespacesRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of AWSClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1AWSClusterConfigListForAllNamespaces(requestParameters: WatchCoreGiantswarmIoV1alpha1AWSClusterConfigListForAllNamespacesRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of AzureClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1AzureClusterConfigListForAllNamespacesRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1AzureClusterConfigListForAllNamespacesRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of AzureClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1AzureClusterConfigListForAllNamespaces(requestParameters: WatchCoreGiantswarmIoV1alpha1AzureClusterConfigListForAllNamespacesRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of CertConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1CertConfigListForAllNamespacesRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1CertConfigListForAllNamespacesRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of CertConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1CertConfigListForAllNamespaces(requestParameters: WatchCoreGiantswarmIoV1alpha1CertConfigListForAllNamespacesRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of ChartConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1ChartConfigListForAllNamespacesRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1ChartConfigListForAllNamespacesRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of ChartConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1ChartConfigListForAllNamespaces(requestParameters: WatchCoreGiantswarmIoV1alpha1ChartConfigListForAllNamespacesRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of DrainerConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1DrainerConfigListForAllNamespacesRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1DrainerConfigListForAllNamespacesRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of DrainerConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1DrainerConfigListForAllNamespaces(requestParameters: WatchCoreGiantswarmIoV1alpha1DrainerConfigListForAllNamespacesRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of FlannelConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1FlannelConfigListForAllNamespacesRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1FlannelConfigListForAllNamespacesRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of FlannelConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1FlannelConfigListForAllNamespaces(requestParameters: WatchCoreGiantswarmIoV1alpha1FlannelConfigListForAllNamespacesRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of Ignition. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1IgnitionListForAllNamespacesRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1IgnitionListForAllNamespacesRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of Ignition. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1IgnitionListForAllNamespaces(requestParameters: WatchCoreGiantswarmIoV1alpha1IgnitionListForAllNamespacesRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of KVMClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1KVMClusterConfigListForAllNamespacesRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1KVMClusterConfigListForAllNamespacesRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of KVMClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1KVMClusterConfigListForAllNamespaces(requestParameters: WatchCoreGiantswarmIoV1alpha1KVMClusterConfigListForAllNamespacesRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch changes to an object of kind AWSClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch changes to an object of kind AWSClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfig(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of AWSClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigListRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigListRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of AWSClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigList(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedAWSClusterConfigListRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch changes to an object of kind AzureClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch changes to an object of kind AzureClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfig(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of AzureClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigListRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigListRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of AzureClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigList(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedAzureClusterConfigListRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch changes to an object of kind CertConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedCertConfigRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch changes to an object of kind CertConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedCertConfig(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedCertConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of CertConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedCertConfigListRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedCertConfigListRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of CertConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedCertConfigList(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedCertConfigListRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch changes to an object of kind ChartConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedChartConfigRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch changes to an object of kind ChartConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedChartConfig(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedChartConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of ChartConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedChartConfigListRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedChartConfigListRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of ChartConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedChartConfigList(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedChartConfigListRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch changes to an object of kind DrainerConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch changes to an object of kind DrainerConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedDrainerConfig(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedDrainerConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of DrainerConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedDrainerConfigListRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedDrainerConfigListRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of DrainerConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedDrainerConfigList(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedDrainerConfigListRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch changes to an object of kind FlannelConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch changes to an object of kind FlannelConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedFlannelConfig(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedFlannelConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of FlannelConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedFlannelConfigListRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedFlannelConfigListRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of FlannelConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedFlannelConfigList(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedFlannelConfigListRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch changes to an object of kind Ignition. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedIgnitionRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch changes to an object of kind Ignition. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedIgnition(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedIgnitionRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of Ignition. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedIgnitionListRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedIgnitionListRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of Ignition. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedIgnitionList(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedIgnitionListRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch changes to an object of kind KVMClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch changes to an object of kind KVMClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfig(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of KVMClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigListRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigListRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of KVMClusterConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigList(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedKVMClusterConfigListRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch changes to an object of kind StorageConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedStorageConfigRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch changes to an object of kind StorageConfig. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedStorageConfig(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedStorageConfigRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of StorageConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedStorageConfigListRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedStorageConfigListRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of StorageConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1NamespacedStorageConfigList(requestParameters: WatchCoreGiantswarmIoV1alpha1NamespacedStorageConfigListRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of StorageConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1StorageConfigListForAllNamespacesRaw(requestParameters: WatchCoreGiantswarmIoV1alpha1StorageConfigListForAllNamespacesRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of StorageConfig. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchCoreGiantswarmIoV1alpha1StorageConfigListForAllNamespaces(requestParameters: WatchCoreGiantswarmIoV1alpha1StorageConfigListForAllNamespacesRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
}
//# sourceMappingURL=CoreGiantswarmIoV1alpha1Api.d.ts.map