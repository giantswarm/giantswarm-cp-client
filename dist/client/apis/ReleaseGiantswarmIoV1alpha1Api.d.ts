/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1Release, ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseList, IoK8sApimachineryPkgApisMetaV1APIResourceList, IoK8sApimachineryPkgApisMetaV1DeleteOptions, IoK8sApimachineryPkgApisMetaV1Status, IoK8sApimachineryPkgApisMetaV1WatchEvent } from '../models';
export interface CreateReleaseGiantswarmIoV1alpha1ReleaseRequest {
    body: ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1Release;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface DeleteReleaseGiantswarmIoV1alpha1CollectionReleaseRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteReleaseGiantswarmIoV1alpha1ReleaseRequest {
    name: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface ListReleaseGiantswarmIoV1alpha1ReleaseRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface PatchReleaseGiantswarmIoV1alpha1ReleaseRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}
export interface ReadReleaseGiantswarmIoV1alpha1ReleaseRequest {
    name: string;
    pretty?: string;
}
export interface ReplaceReleaseGiantswarmIoV1alpha1ReleaseRequest {
    name: string;
    body: ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1Release;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface WatchReleaseGiantswarmIoV1alpha1ReleaseRequest {
    name: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchReleaseGiantswarmIoV1alpha1ReleaseListRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
/**
 *
 */
export declare class ReleaseGiantswarmIoV1alpha1Api extends runtime.BaseAPI {
    /**
     * create a Release
     */
    createReleaseGiantswarmIoV1alpha1ReleaseRaw(requestParameters: CreateReleaseGiantswarmIoV1alpha1ReleaseRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1Release>>;
    /**
     * create a Release
     */
    createReleaseGiantswarmIoV1alpha1Release(requestParameters: CreateReleaseGiantswarmIoV1alpha1ReleaseRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1Release>;
    /**
     * delete collection of Release
     */
    deleteReleaseGiantswarmIoV1alpha1CollectionReleaseRaw(requestParameters: DeleteReleaseGiantswarmIoV1alpha1CollectionReleaseRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete collection of Release
     */
    deleteReleaseGiantswarmIoV1alpha1CollectionRelease(requestParameters: DeleteReleaseGiantswarmIoV1alpha1CollectionReleaseRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete a Release
     */
    deleteReleaseGiantswarmIoV1alpha1ReleaseRaw(requestParameters: DeleteReleaseGiantswarmIoV1alpha1ReleaseRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete a Release
     */
    deleteReleaseGiantswarmIoV1alpha1Release(requestParameters: DeleteReleaseGiantswarmIoV1alpha1ReleaseRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * get available resources
     */
    getReleaseGiantswarmIoV1alpha1APIResourcesRaw(): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1APIResourceList>>;
    /**
     * get available resources
     */
    getReleaseGiantswarmIoV1alpha1APIResources(): Promise<IoK8sApimachineryPkgApisMetaV1APIResourceList>;
    /**
     * list or watch objects of kind Release
     */
    listReleaseGiantswarmIoV1alpha1ReleaseRaw(requestParameters: ListReleaseGiantswarmIoV1alpha1ReleaseRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseList>>;
    /**
     * list or watch objects of kind Release
     */
    listReleaseGiantswarmIoV1alpha1Release(requestParameters: ListReleaseGiantswarmIoV1alpha1ReleaseRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseList>;
    /**
     * partially update the specified Release
     */
    patchReleaseGiantswarmIoV1alpha1ReleaseRaw(requestParameters: PatchReleaseGiantswarmIoV1alpha1ReleaseRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1Release>>;
    /**
     * partially update the specified Release
     */
    patchReleaseGiantswarmIoV1alpha1Release(requestParameters: PatchReleaseGiantswarmIoV1alpha1ReleaseRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1Release>;
    /**
     * read the specified Release
     */
    readReleaseGiantswarmIoV1alpha1ReleaseRaw(requestParameters: ReadReleaseGiantswarmIoV1alpha1ReleaseRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1Release>>;
    /**
     * read the specified Release
     */
    readReleaseGiantswarmIoV1alpha1Release(requestParameters: ReadReleaseGiantswarmIoV1alpha1ReleaseRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1Release>;
    /**
     * replace the specified Release
     */
    replaceReleaseGiantswarmIoV1alpha1ReleaseRaw(requestParameters: ReplaceReleaseGiantswarmIoV1alpha1ReleaseRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1Release>>;
    /**
     * replace the specified Release
     */
    replaceReleaseGiantswarmIoV1alpha1Release(requestParameters: ReplaceReleaseGiantswarmIoV1alpha1ReleaseRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1Release>;
    /**
     * watch changes to an object of kind Release. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchReleaseGiantswarmIoV1alpha1ReleaseRaw(requestParameters: WatchReleaseGiantswarmIoV1alpha1ReleaseRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch changes to an object of kind Release. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchReleaseGiantswarmIoV1alpha1Release(requestParameters: WatchReleaseGiantswarmIoV1alpha1ReleaseRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of Release. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchReleaseGiantswarmIoV1alpha1ReleaseListRaw(requestParameters: WatchReleaseGiantswarmIoV1alpha1ReleaseListRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of Release. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchReleaseGiantswarmIoV1alpha1ReleaseList(requestParameters: WatchReleaseGiantswarmIoV1alpha1ReleaseListRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
}
//# sourceMappingURL=ReleaseGiantswarmIoV1alpha1Api.d.ts.map