/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ComGithubGiantswarmApiextensionsPkgApisSecurityV1alpha1Organization, ComGithubGiantswarmApiextensionsPkgApisSecurityV1alpha1OrganizationList, IoK8sApimachineryPkgApisMetaV1APIResourceList, IoK8sApimachineryPkgApisMetaV1DeleteOptions, IoK8sApimachineryPkgApisMetaV1Status, IoK8sApimachineryPkgApisMetaV1WatchEvent } from '../models';
export interface CreateSecurityGiantswarmIoV1alpha1OrganizationRequest {
    body: ComGithubGiantswarmApiextensionsPkgApisSecurityV1alpha1Organization;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface DeleteSecurityGiantswarmIoV1alpha1CollectionOrganizationRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface DeleteSecurityGiantswarmIoV1alpha1OrganizationRequest {
    name: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}
export interface ListSecurityGiantswarmIoV1alpha1OrganizationRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface PatchSecurityGiantswarmIoV1alpha1OrganizationRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    force?: boolean;
}
export interface ReadSecurityGiantswarmIoV1alpha1OrganizationRequest {
    name: string;
    pretty?: string;
}
export interface ReplaceSecurityGiantswarmIoV1alpha1OrganizationRequest {
    name: string;
    body: ComGithubGiantswarmApiextensionsPkgApisSecurityV1alpha1Organization;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
}
export interface WatchSecurityGiantswarmIoV1alpha1OrganizationRequest {
    name: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
export interface WatchSecurityGiantswarmIoV1alpha1OrganizationListRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}
/**
 *
 */
export declare class SecurityGiantswarmIoV1alpha1Api extends runtime.BaseAPI {
    /**
     * create an Organization
     */
    createSecurityGiantswarmIoV1alpha1OrganizationRaw(requestParameters: CreateSecurityGiantswarmIoV1alpha1OrganizationRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisSecurityV1alpha1Organization>>;
    /**
     * create an Organization
     */
    createSecurityGiantswarmIoV1alpha1Organization(requestParameters: CreateSecurityGiantswarmIoV1alpha1OrganizationRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisSecurityV1alpha1Organization>;
    /**
     * delete collection of Organization
     */
    deleteSecurityGiantswarmIoV1alpha1CollectionOrganizationRaw(requestParameters: DeleteSecurityGiantswarmIoV1alpha1CollectionOrganizationRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete collection of Organization
     */
    deleteSecurityGiantswarmIoV1alpha1CollectionOrganization(requestParameters: DeleteSecurityGiantswarmIoV1alpha1CollectionOrganizationRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * delete an Organization
     */
    deleteSecurityGiantswarmIoV1alpha1OrganizationRaw(requestParameters: DeleteSecurityGiantswarmIoV1alpha1OrganizationRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>>;
    /**
     * delete an Organization
     */
    deleteSecurityGiantswarmIoV1alpha1Organization(requestParameters: DeleteSecurityGiantswarmIoV1alpha1OrganizationRequest): Promise<IoK8sApimachineryPkgApisMetaV1Status>;
    /**
     * get available resources
     */
    getSecurityGiantswarmIoV1alpha1APIResourcesRaw(): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1APIResourceList>>;
    /**
     * get available resources
     */
    getSecurityGiantswarmIoV1alpha1APIResources(): Promise<IoK8sApimachineryPkgApisMetaV1APIResourceList>;
    /**
     * list or watch objects of kind Organization
     */
    listSecurityGiantswarmIoV1alpha1OrganizationRaw(requestParameters: ListSecurityGiantswarmIoV1alpha1OrganizationRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisSecurityV1alpha1OrganizationList>>;
    /**
     * list or watch objects of kind Organization
     */
    listSecurityGiantswarmIoV1alpha1Organization(requestParameters: ListSecurityGiantswarmIoV1alpha1OrganizationRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisSecurityV1alpha1OrganizationList>;
    /**
     * partially update the specified Organization
     */
    patchSecurityGiantswarmIoV1alpha1OrganizationRaw(requestParameters: PatchSecurityGiantswarmIoV1alpha1OrganizationRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisSecurityV1alpha1Organization>>;
    /**
     * partially update the specified Organization
     */
    patchSecurityGiantswarmIoV1alpha1Organization(requestParameters: PatchSecurityGiantswarmIoV1alpha1OrganizationRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisSecurityV1alpha1Organization>;
    /**
     * read the specified Organization
     */
    readSecurityGiantswarmIoV1alpha1OrganizationRaw(requestParameters: ReadSecurityGiantswarmIoV1alpha1OrganizationRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisSecurityV1alpha1Organization>>;
    /**
     * read the specified Organization
     */
    readSecurityGiantswarmIoV1alpha1Organization(requestParameters: ReadSecurityGiantswarmIoV1alpha1OrganizationRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisSecurityV1alpha1Organization>;
    /**
     * replace the specified Organization
     */
    replaceSecurityGiantswarmIoV1alpha1OrganizationRaw(requestParameters: ReplaceSecurityGiantswarmIoV1alpha1OrganizationRequest): Promise<runtime.ApiResponse<ComGithubGiantswarmApiextensionsPkgApisSecurityV1alpha1Organization>>;
    /**
     * replace the specified Organization
     */
    replaceSecurityGiantswarmIoV1alpha1Organization(requestParameters: ReplaceSecurityGiantswarmIoV1alpha1OrganizationRequest): Promise<ComGithubGiantswarmApiextensionsPkgApisSecurityV1alpha1Organization>;
    /**
     * watch changes to an object of kind Organization. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchSecurityGiantswarmIoV1alpha1OrganizationRaw(requestParameters: WatchSecurityGiantswarmIoV1alpha1OrganizationRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch changes to an object of kind Organization. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    watchSecurityGiantswarmIoV1alpha1Organization(requestParameters: WatchSecurityGiantswarmIoV1alpha1OrganizationRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
    /**
     * watch individual changes to a list of Organization. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchSecurityGiantswarmIoV1alpha1OrganizationListRaw(requestParameters: WatchSecurityGiantswarmIoV1alpha1OrganizationListRequest): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>>;
    /**
     * watch individual changes to a list of Organization. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    watchSecurityGiantswarmIoV1alpha1OrganizationList(requestParameters: WatchSecurityGiantswarmIoV1alpha1OrganizationListRequest): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent>;
}
//# sourceMappingURL=SecurityGiantswarmIoV1alpha1Api.d.ts.map