/* tslint:disable */
/* eslint-disable */
/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigConfigMap,
    ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigConfigMapFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigConfigMapFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigConfigMapToJSON,
    ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigSecret,
    ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigSecretFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigSecretFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigSecretToJSON,
} from './';

/**
 * 
 * @export
 * @interface ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfig
 */
export interface ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfig {
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigConfigMap}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfig
     */
    configMap: ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigConfigMap;
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigSecret}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfig
     */
    secret: ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigSecret;
}

export function ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigFromJSON(json: any): ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfig {
    return ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigFromJSONTyped(json, false);
}

export function ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'configMap': ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigConfigMapFromJSON(json['configMap']),
        'secret': ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigSecretFromJSON(json['secret']),
    };
}

export function ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigToJSON(value?: ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'configMap': ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigConfigMapToJSON(value.configMap),
        'secret': ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1AppCatalogSpecConfigSecretToJSON(value.secret),
    };
}


