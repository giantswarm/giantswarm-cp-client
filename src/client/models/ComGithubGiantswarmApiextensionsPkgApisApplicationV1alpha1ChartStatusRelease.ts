/* tslint:disable */
/* eslint-disable */
/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusRelease
 */
export interface ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusRelease {
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusRelease
     */
    lastDeployed?: Date;
    /**
     * Revision is the revision number for this deployed chart.
     * @type {number}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusRelease
     */
    revision: number;
    /**
     * Status is the status of the deployed chart, e.g. DEPLOYED.
     * @type {string}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusRelease
     */
    status: string;
}

export function ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusReleaseFromJSON(json: any): ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusRelease {
    return ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusReleaseFromJSONTyped(json, false);
}

export function ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusReleaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusRelease {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lastDeployed': !exists(json, 'lastDeployed') ? undefined : (new Date(json['lastDeployed'])),
        'revision': json['revision'],
        'status': json['status'],
    };
}

export function ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusReleaseToJSON(value?: ComGithubGiantswarmApiextensionsPkgApisApplicationV1alpha1ChartStatusRelease | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lastDeployed': value.lastDeployed === undefined ? undefined : (value.lastDeployed.toISOString()),
        'revision': value.revision,
        'status': value.status,
    };
}


