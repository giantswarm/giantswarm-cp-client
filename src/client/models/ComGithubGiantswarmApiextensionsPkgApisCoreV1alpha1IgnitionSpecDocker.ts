/* tslint:disable */
/* eslint-disable */
/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerDaemon,
    ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerDaemonFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerDaemonFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerDaemonToJSON,
    ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerNetworkSetup,
    ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerNetworkSetupFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerNetworkSetupFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerNetworkSetupToJSON,
} from './';

/**
 * 
 * @export
 * @interface ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDocker
 */
export interface ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDocker {
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerDaemon}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDocker
     */
    daemon: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerDaemon;
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerNetworkSetup}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDocker
     */
    networkSetup: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerNetworkSetup;
}

export function ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerFromJSON(json: any): ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDocker {
    return ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerFromJSONTyped(json, false);
}

export function ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDocker {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'daemon': ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerDaemonFromJSON(json['daemon']),
        'networkSetup': ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerNetworkSetupFromJSON(json['networkSetup']),
    };
}

export function ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerToJSON(value?: ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDocker | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'daemon': ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerDaemonToJSON(value.daemon),
        'networkSetup': ComGithubGiantswarmApiextensionsPkgApisCoreV1alpha1IgnitionSpecDockerNetworkSetupToJSON(value.networkSetup),
    };
}


