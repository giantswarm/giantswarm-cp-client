/* tslint:disable */
/* eslint-disable */
/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSMachineDeploymentSpecInstanceDistribution
 */
export interface ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSMachineDeploymentSpecInstanceDistribution {
    /**
     * Base capacity of on-demand instances to use for worker nodes in this pool. When this larger than 0, this value defines a number of worker nodes that will be created using on-demand EC2 instances, regardless of the value configured as `onDemandPercentageAboveBaseCapacity`.
     * @type {number}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSMachineDeploymentSpecInstanceDistribution
     */
    onDemandBaseCapacity?: number;
    /**
     * Percentage of on-demand EC2 instances to use for worker nodes, instead of spot instances, for instances exceeding `onDemandBaseCapacity`. For example, to have half of the worker nodes use spot instances and half use on-demand, set this value to 50.
     * @type {number}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSMachineDeploymentSpecInstanceDistribution
     */
    onDemandPercentageAboveBaseCapacity?: number;
}

export function ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSMachineDeploymentSpecInstanceDistributionFromJSON(json: any): ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSMachineDeploymentSpecInstanceDistribution {
    return ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSMachineDeploymentSpecInstanceDistributionFromJSONTyped(json, false);
}

export function ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSMachineDeploymentSpecInstanceDistributionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSMachineDeploymentSpecInstanceDistribution {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'onDemandBaseCapacity': !exists(json, 'onDemandBaseCapacity') ? undefined : json['onDemandBaseCapacity'],
        'onDemandPercentageAboveBaseCapacity': !exists(json, 'onDemandPercentageAboveBaseCapacity') ? undefined : json['onDemandPercentageAboveBaseCapacity'],
    };
}

export function ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSMachineDeploymentSpecInstanceDistributionToJSON(value?: ComGithubGiantswarmApiextensionsPkgApisInfrastructureV1alpha2AWSMachineDeploymentSpecInstanceDistribution | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'onDemandBaseCapacity': value.onDemandBaseCapacity,
        'onDemandPercentageAboveBaseCapacity': value.onDemandPercentageAboveBaseCapacity,
    };
}


