/* tslint:disable */
/* eslint-disable */
/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCalico,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCalicoFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCalicoFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCalicoToJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCustomer,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCustomerFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCustomerFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCustomerToJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterDocker,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterDockerFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterDockerFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterDockerToJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterEtcd,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterEtcdFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterEtcdFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterEtcdToJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesToJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterNode,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterNodeFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterNodeFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterNodeToJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterScaling,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterScalingFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterScalingFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterScalingToJSON,
} from './';

/**
 * 
 * @export
 * @interface ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster
 */
export interface ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster {
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCalico}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster
     */
    calico: ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCalico;
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCustomer}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster
     */
    customer: ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCustomer;
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterDocker}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster
     */
    docker: ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterDocker;
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterEtcd}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster
     */
    etcd: ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterEtcd;
    /**
     * 
     * @type {string}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster
     */
    id: string;
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster
     */
    kubernetes: ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetes;
    /**
     * 
     * @type {Array<ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterNode>}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster
     */
    masters: Array<ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterNode>;
    /**
     * 
     * @type {ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterScaling}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster
     */
    scaling: ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterScaling;
    /**
     * Version is DEPRECATED and should just be dropped.
     * @type {string}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster
     */
    version: string;
    /**
     * 
     * @type {Array<ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterNode>}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster
     */
    workers?: Array<ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterNode>;
}

export function ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterFromJSON(json: any): ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster {
    return ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterFromJSONTyped(json, false);
}

export function ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'calico': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCalicoFromJSON(json['calico']),
        'customer': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCustomerFromJSON(json['customer']),
        'docker': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterDockerFromJSON(json['docker']),
        'etcd': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterEtcdFromJSON(json['etcd']),
        'id': json['id'],
        'kubernetes': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesFromJSON(json['kubernetes']),
        'masters': ((json['masters'] as Array<any>).map(ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterNodeFromJSON)),
        'scaling': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterScalingFromJSON(json['scaling']),
        'version': json['version'],
        'workers': !exists(json, 'workers') ? undefined : ((json['workers'] as Array<any>).map(ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterNodeFromJSON)),
    };
}

export function ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterToJSON(value?: ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1Cluster | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'calico': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCalicoToJSON(value.calico),
        'customer': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterCustomerToJSON(value.customer),
        'docker': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterDockerToJSON(value.docker),
        'etcd': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterEtcdToJSON(value.etcd),
        'id': value.id,
        'kubernetes': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterKubernetesToJSON(value.kubernetes),
        'masters': ((value.masters as Array<any>).map(ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterNodeToJSON)),
        'scaling': ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterScalingToJSON(value.scaling),
        'version': value.version,
        'workers': value.workers === undefined ? undefined : ((value.workers as Array<any>).map(ComGithubGiantswarmApiextensionsPkgApisProviderV1alpha1ClusterNodeToJSON)),
    };
}


