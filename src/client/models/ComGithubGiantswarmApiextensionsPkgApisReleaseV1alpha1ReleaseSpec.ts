/* tslint:disable */
/* eslint-disable */
/**
 * giantswarm-cp-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecApp,
    ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecAppFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecAppFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecAppToJSON,
    ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecComponent,
    ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecComponentFromJSON,
    ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecComponentFromJSONTyped,
    ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecComponentToJSON,
} from './';

/**
 * 
 * @export
 * @interface ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpec
 */
export interface ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpec {
    /**
     * Apps describes apps used in this release.
     * @type {Array<ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecApp>}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpec
     */
    apps: Array<ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecApp>;
    /**
     * Components describes components used in this release.
     * @type {Array<ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecComponent>}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpec
     */
    components: Array<ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecComponent>;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpec
     */
    date: Date;
    /**
     * State indicates the availability of the release: deprecated, active, or wip.
     * @type {string}
     * @memberof ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpec
     */
    state: string;
}

export function ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecFromJSON(json: any): ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpec {
    return ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecFromJSONTyped(json, false);
}

export function ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apps': ((json['apps'] as Array<any>).map(ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecAppFromJSON)),
        'components': ((json['components'] as Array<any>).map(ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecComponentFromJSON)),
        'date': (new Date(json['date'])),
        'state': json['state'],
    };
}

export function ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecToJSON(value?: ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apps': ((value.apps as Array<any>).map(ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecAppToJSON)),
        'components': ((value.components as Array<any>).map(ComGithubGiantswarmApiextensionsPkgApisReleaseV1alpha1ReleaseSpecComponentToJSON)),
        'date': (value.date.toISOString()),
        'state': value.state,
    };
}


